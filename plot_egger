results_drug_level<- data.frame(read_csv("mr_output/met-c-859/all_3levels_MR.csv"))

####Combined
results <-results_drug_level
results1 <- filter(results, drug=="Combined")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Combined")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(100, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))

####Alpha Glucosidase Inhibitors
results <-results_drug_level
results1 <- filter(results, drug=="Alpha Glucosidase Inhibitors")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Alpha Glucosidase Inhibitors")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(100, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))


####Amylin Analog
results <-results_drug_level
results1 <- filter(results, drug=="Amylin Analog")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Amylin Analog")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(100, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))


####Sulfonylureas
results <-results_drug_level
results1 <- filter(results, drug=="Sulfonylureas")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Sulfonylureas")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(100, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))


####Biguanides
results <-results_drug_level
results1 <- filter(results, drug=="Biguanides")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Biguanides")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(100, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))

####Dipeptidyl Peptidase 4 (Dpp-Iv) Inhibitor
results <-results_drug_level
results1 <- filter(results, drug=="Dipeptidyl Peptidase 4 (Dpp-Iv) Inhibitor")
results1 <- filter(results1, SNP=="All - Inverse variance weighted")
results2 <- filter(results, drug=="Dipeptidyl Peptidase 4 (Dpp-Iv) Inhibitor")
results2 <- filter(results2, SNP=="All - MR Egger")


results_egger <- rbind(results1, results2)


results_egger <- results_egger[,c("outcome","SNP","drug","p","or","uci","lci")]
results_egger_ivw <- results_egger[order(results_egger$outcome, results_egger$drug),]

results<- results_egger_ivw
# Create OR labels ============================================================
format(results, scientific= TRUE)
results$orlab <- paste0("OR: ",
                        ifelse(sprintf("%.2f",results$or)<0.0051,
                               format(results$or,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$or)),
                        " (95% CI: ", 
                        ifelse(sprintf("%.2f",results$lci)<0.0051,
                               format(results$lci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$lci)),
                        " to ",
                        ifelse(sprintf("%.2f",results$uci)<0.0051,
                               format(results$uci,scientific = TRUE,digits=3),
                               sprintf("%.2f",results$uci)),
                        ")")


results$orlab <- ifelse(results$p>=0.01 & results$p<=0.99,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<=0.01 & results$p>=0.001,
                        paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)
#results$orlab <- ifelse(results$p<0.001,
#                       paste0(results$orlab,"; p = ", sprintf("%.3f",results$p)), results$orlab)

results$orlab <- ifelse(results$p<0.001,
                        paste0(results$orlab,"; p < 0.001"), results$orlab)

results$orlab <- ifelse(results$p>0.99,
                        paste0(results$orlab,"; p > 0.99"), results$orlab)


colnames(results)<- c("Outcome", "Method", "Drug", " ", " ", " ", "","OR (95% CI); p value") 

results2<-result

library(forestplot)

write.csv(results,file="mr_output/met-c-859/tmp_results_3levels.csv",row.names = FALSE,na = "")
results<- read.csv("mr_output/met-c-859/tmp_results_3levels.csv", header = FALSE)
results<- data.frame(results)

forestplot(labeltext = as.matrix(results[,c(1, 2, 8)]),
           mean = results$V5,
           lower = results$V7,
           upper = results$V6, 
           align = c("l", "l", "l","l","l"),
           colgap = unit(4,'mm'),
           zero = 1, 
           boxsize = 0.2, 
           lwd.zero = 2,
           lwd.ci = 2,
           lineheight = unit(4, 'mm'),
           graphwidth = unit(90, 'mm'), 
           xlab= "OR and 95% CI for developing cancer \n for 1 SD decrease in circulating glucose level",
           graph.pos = 3,
           clip =c(-1, 10),
           xticks = c(0, 1, 10, 20),
           txt_gp=fpTxtGp(xlab=gpar(cex=1.1), ticks=gpar(cex=1.1)),
           col = fpColors(lines = "#FF0000", box = "#000000"),
           gp = gpar(fill = "#FFFFFF"))
